///
/// HybridNitroCalendarSpec.swift
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

import Foundation
import NitroModules

/// See ``HybridNitroCalendarSpec``
public protocol HybridNitroCalendarSpec_protocol: HybridObject, HybridView {
  // Properties
  var isBlue: Bool { get set }
  var hasBeenCalled: Bool { get set }
  var colorScheme: ColorScheme { get set }
  var someCallback: () -> Void { get set }

  // Methods
  func someMethod() throws -> Void
}

/// See ``HybridNitroCalendarSpec``
public class HybridNitroCalendarSpec_base {
  private weak var cxxWrapper: HybridNitroCalendarSpec_cxx? = nil
  public func getCxxWrapper() -> HybridNitroCalendarSpec_cxx {
  #if DEBUG
    guard self is HybridNitroCalendarSpec else {
      fatalError("`self` is not a `HybridNitroCalendarSpec`! Did you accidentally inherit from `HybridNitroCalendarSpec_base` instead of `HybridNitroCalendarSpec`?")
    }
  #endif
    if let cxxWrapper = self.cxxWrapper {
      return cxxWrapper
    } else {
      let cxxWrapper = HybridNitroCalendarSpec_cxx(self as! HybridNitroCalendarSpec)
      self.cxxWrapper = cxxWrapper
      return cxxWrapper
    }
  }
}

/**
 * A Swift base-protocol representing the NitroCalendar HybridObject.
 * Implement this protocol to create Swift-based instances of NitroCalendar.
 * ```swift
 * class HybridNitroCalendar : HybridNitroCalendarSpec {
 *   // ...
 * }
 * ```
 */
public typealias HybridNitroCalendarSpec = HybridNitroCalendarSpec_protocol & HybridNitroCalendarSpec_base
