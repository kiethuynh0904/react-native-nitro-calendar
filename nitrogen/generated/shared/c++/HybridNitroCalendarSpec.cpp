///
/// HybridNitroCalendarSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#include "HybridNitroCalendarSpec.hpp"

namespace margelo::nitro::nitrocalendar {

  void HybridNitroCalendarSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("isBlue", &HybridNitroCalendarSpec::getIsBlue);
      prototype.registerHybridSetter("isBlue", &HybridNitroCalendarSpec::setIsBlue);
      prototype.registerHybridGetter("hasBeenCalled", &HybridNitroCalendarSpec::getHasBeenCalled);
      prototype.registerHybridSetter("hasBeenCalled", &HybridNitroCalendarSpec::setHasBeenCalled);
      prototype.registerHybridGetter("colorScheme", &HybridNitroCalendarSpec::getColorScheme);
      prototype.registerHybridSetter("colorScheme", &HybridNitroCalendarSpec::setColorScheme);
      prototype.registerHybridGetter("someCallback", &HybridNitroCalendarSpec::getSomeCallback);
      prototype.registerHybridSetter("someCallback", &HybridNitroCalendarSpec::setSomeCallback);
      prototype.registerHybridMethod("someMethod", &HybridNitroCalendarSpec::someMethod);
    });
  }

} // namespace margelo::nitro::nitrocalendar
